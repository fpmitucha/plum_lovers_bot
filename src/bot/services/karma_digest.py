# src/bot/services/karma_digest.py
from __future__ import annotations

"""
–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∫—Ä–∞—Ç–∫–æ–≥–æ –¥–∞–π–¥–∂–µ—Å—Ç–∞ –ø–æ –∫–∞—Ä–º–µ.

–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
- —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ –≤ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è (–ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞) –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—Å–µ–º –ø—Ä–æ—Ñ–∏–ª—è–º
- —Å—á–∏—Ç–∞–µ—Ç + –∏ - –∫–∞—Ä–º—É –∑–∞ —Ç–µ–∫—É—â–∏–µ —Å—É—Ç–∫–∏, –∞ —Ç–∞–∫–∂–µ –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
- –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ-–æ—Ç—á—ë—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞ —Å–µ–≥–æ–¥–Ω—è)

–ó–∞–ø—É—Å–∫ –∏–∑ bot.main:  start_karma_digest(bot, session_maker, hour=21, minute=0)
"""

import asyncio
from datetime import datetime, timedelta, timezone
from typing import Iterable, List

from aiogram import Bot
from sqlalchemy import select
from sqlalchemy.ext.asyncio import async_sessionmaker, AsyncSession

from bot.utils.repo import Repo
from bot.models import Profile  # –º–æ–¥–µ–ª—å —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –ø—Ä–æ–µ–∫—Ç–µ


async def _all_user_ids(session_maker: async_sessionmaker[AsyncSession]) -> List[int]:
    """–°–æ–±—Ä–∞—Ç—å –≤—Å–µ user_id –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ—Ñ–∏–ª–µ–π."""
    async with session_maker() as s:
        rows = await s.execute(select(Profile.user_id))
        return [int(x) for x in rows.scalars().all() if x]


def _seconds_until(hour: int, minute: int) -> float:
    """–°–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ —Å–ø–∞—Ç—å –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞)."""
    now = datetime.now()
    target = now.replace(hour=hour, minute=minute, second=0, microsecond=0)
    if target <= now:
        target = target + timedelta(days=1)
    return (target - now).total_seconds()


async def _send_digest_once(bot: Bot, session_maker: async_sessionmaker[AsyncSession]) -> None:
    """–û–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥ –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –æ—Ç—á—ë—Ç–æ–≤."""
    user_ids = await _all_user_ids(session_maker)

    # –∏–Ω—Ç–µ—Ä–≤–∞–ª "—Å–µ–≥–æ–¥–Ω—è": —Å –ø–æ–ª—É–Ω–æ—á–∏ –ø–æ UTC –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –ø–æ UTC (–∫–∞–∫ –∏ –≤—Å—è –∫–∞—Ä–º–∞ –≤ Repo)
    now_utc = datetime.now(timezone.utc)
    start_today_utc = now_utc.replace(hour=0, minute=0, second=0, microsecond=0)

    async with session_maker() as s:
        repo = Repo(s)
        for uid in user_ids:
            try:
                plus_today, minus_today = await repo.karma_stats(uid, since=start_today_utc, until=now_utc)
                # –ß—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å: –µ—Å–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                if (plus_today or minus_today):
                    plus_total, minus_total = await repo.karma_stats(uid)
                    karma = await repo.get_karma(uid)

                    text = (
                        "üì¨ <b>–î–Ω–µ–≤–Ω–æ–π –æ—Ç—á—ë—Ç –ø–æ –∫–∞—Ä–º–µ</b>\n"
                        f"–ó–∞ —Å–µ–≥–æ–¥–Ω—è:  +{plus_today} / -{minus_today}\n"
                        f"–í—Å–µ–≥–æ:       +{plus_total} / -{minus_total}\n"
                        f"–¢–µ–∫—É—â–∞—è –∫–∞—Ä–º–∞: <b>{karma}</b>\n\n"
                        "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –ö–õ–°!"
                    )
                    await bot.send_message(uid, text, parse_mode="HTML")
            except Exception:
                # –õ—é–±—ã–µ –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä—ã–ª –õ–°, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ –∏ —Ç.–ø.) ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
                continue


def start_karma_digest(
    bot: Bot,
    session_maker: async_sessionmaker[AsyncSession],
    *,
    hour: int = 21,
    minute: int = 0,
) -> None:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º —Ü–∏–∫–ª–æ–º:
    - –∂–¥—ë—Ç –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏;
    - –¥–µ–ª–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É;
    - —Å–Ω–æ–≤–∞ –∂–¥—ë—Ç —Å—É—Ç–∫–∏.
    """
    async def _runner():
        # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫: –∂–¥—ë–º –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ ¬´—á–∞—Å:–º–∏–Ω—É—Ç–∞¬ª, —á—Ç–æ–±—ã –Ω–µ –≤–∞–ª–∏—Ç—å –æ—Ç—á—ë—Ç—ã —Å—Ä–∞–∑—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
        await asyncio.sleep(max(0.0, _seconds_until(hour, minute)))
        while True:
            try:
                await _send_digest_once(bot, session_maker)
            except Exception:
                # –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–∞–¥–∞–µ–º –Ω–∞–≤—Å–µ–≥–¥–∞ –∏–∑-–∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è ‚Äî –ø—Ä–æ—Å—Ç–æ –∂–¥—ë–º —Å–ª–µ–¥—É—é—â–∏–µ —Å—É—Ç–∫–∏
                pass
            # –ñ–¥—ë–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è
            await asyncio.sleep(24 * 60 * 60)

    asyncio.create_task(_runner(), name="karma_daily_digest")
